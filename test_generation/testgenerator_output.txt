# 01100011kkkkkkkk	ADCI	k

instruction = MultiOpInstruction('ADCI', '-73', 'test', 131935)
hex = instruction.hex(2018, [], [], False)
assert hex == "07E2 63B7"
assert instruction._error == False

# 01101011kkkkkkkk	ADDI	k

instruction = MultiOpInstruction('ADDI', '-13', 'test', 583370)
hex = instruction.hex(1636, [], [], False)
assert hex == "0664 6BF3"
assert instruction._error == False

# 01000111kkkkkkkk	ANDI	k

instruction = MultiOpInstruction('ANDI', '169', 'test', 35952)
hex = instruction.hex(5917, [], [], False)
assert hex == "171D 47A9"
assert instruction._error == False

# 00110011kkkkkkkk	CMPI	k

instruction = MultiOpInstruction('CMPI', '92', 'test', 837723)
hex = instruction.hex(8150, [], [], False)
assert hex == "1FD6 335C"
assert instruction._error == False

# 01110111kkkkkkkk	ORI	k

instruction = MultiOpInstruction('ORI', '146', 'test', 804783)
hex = instruction.hex(6849, [], [], False)
assert hex == "1AC1 7792"
assert instruction._error == False

# 00011011kkkkkkkk	SBBI	k

instruction = MultiOpInstruction('SBBI', '9', 'test', 104841)
hex = instruction.hex(1743, [], [], False)
assert hex == "06CF 1B09"
assert instruction._error == False

# 00010011kkkkkkkk	SUBI	k

instruction = MultiOpInstruction('SUBI', '168', 'test', 67032)
hex = instruction.hex(3012, [], [], False)
assert hex == "0BC4 13A8"
assert instruction._error == False

# 01001111kkkkkkkk	TSTI	k

instruction = MultiOpInstruction('TSTI', '13', 'test', 813328)
hex = instruction.hex(47, [], [], False)
assert hex == "002F 4F0D"
assert instruction._error == False

# 00110111kkkkkkkk	XORI	k

instruction = MultiOpInstruction('XORI', '243', 'test', 694872)
hex = instruction.hex(5493, [], [], False)
assert hex == "1575 37F3"
assert instruction._error == False

# 10001001kkkkkkkk	LDI	k

instruction = MultiOpInstruction('LDI', '42', 'test', 527944)
hex = instruction.hex(966, [], [], False)
assert hex == "03C6 892A"
assert instruction._error == False

# 10000000mmmmmmmm	LDD	m

instruction = MultiOpInstruction('LDD', '0x6f', 'test', 217171)
hex = instruction.hex(6354, [], [], False)
assert hex == "18D2 806F"
assert instruction._error == False

# 10100000mmmmmmmm	STD	m

instruction = MultiOpInstruction('STD', '0xc0', 'test', 323744)
hex = instruction.hex(3497, [], [], False)
assert hex == "0DA9 A0C0"
assert instruction._error == False

# 10010000pppppppp	IN	p

instruction = MultiOpInstruction('IN', '0x1d', 'test', 589893)
hex = instruction.hex(2266, [], [], False)
assert hex == "08DA 901D"
assert instruction._error == False

# 10110000pppppppp	OUT	p

instruction = MultiOpInstruction('OUT', '0x2b', 'test', 620387)
hex = instruction.hex(2646, [], [], False)
assert hex == "0A56 B02B"
assert instruction._error == False

